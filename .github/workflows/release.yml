name: Create Go Release

on:
  workflow_dispatch:
    inputs:
      new_tag:
        description: 'The new tag to create (e.g., v0.4.0)'
        required: true
      previous_tag:
        description: 'The previous tag for changelog generation (e.g., v0.3.58)'
        required: true

jobs:
  create_changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # To push tags, branches, and commits
      pull-requests: write # To create and merge pull requests
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Create changelog branch
        run: |
          git checkout -b changelog_${{ github.event.inputs.new_tag }}

      - name: Generate changelog
        env:
          GH_TOKEN: ${{ github.token }}
          NEW_TAG: ${{ github.event.inputs.new_tag }}
          PREVIOUS_TAG: ${{ github.event.inputs.previous_tag }}
        run: |
          echo "## Changelog for $NEW_TAG" > changelog.md
          echo "" >> changelog.md
          echo "Update from $PREVIOUS_TAG to $NEW_TAG" >> changelog.md
          echo "" >> changelog.md
          echo "Release timestamp: $(date +%Y-%m-%d)" >> changelog.md
          echo "" >> changelog.md
          gh api repos/${{ github.repository }}/compare/${PREVIOUS_TAG}...HEAD --jq '.commits[] | "- \(.commit.message | split("\n")[0]) (by @\(.author.login // .commit.author.name) in `\(.sha | tostring | .[0:7])`) "' >> changelog.md
          mkdir -p CHANGELOGS
          mv changelog.md CHANGELOGS/${NEW_TAG}-release.md

      - name: Commit and push changelog
        run: |
          git add CHANGELOGS/${{ github.event.inputs.new_tag }}-release.md
          git commit -m "docs(changelog): Generate changelog for ${{ github.event.inputs.new_tag }}"
          git push --set-upstream origin changelog_${{ github.event.inputs.new_tag }}

      - name: Create Changelog Pull Request
        env:
          GH_TOKEN: ${{ github.token }}
          NEW_TAG: ${{ github.event.inputs.new_tag }}
        run: |
          gh pr create --title "build: bump app-backend-version to ${NEW_TAG}" --body "build: bump bump app-backend-version to ${NEW_TAG}" --base main --head changelog_${{ github.event.inputs.new_tag }}

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: create_changelog
    steps:
      - name: Checkout branch
        uses: actions/checkout@v5

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25

      - name: Build Go project
        run: |
          go mod download # todo: add cache for optimization
          make build-apiserver

      # todo: 需要使用优雅的方式灰度发布（架构上需要部署多实例，并通过nginx反代避免），避免停机闪断
      - name: Deploy to Production
        env:
          SSH_PRIVATE_KEY: ${{ secrets.YQLX_DEPLOY_SSH_KEY }}
          SERVER_USER: root
          SERVER_IP: ${{ secrets.YQLX_DEPLOY_SERVER_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          #          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
          #            docker stop gojxust
          #          EOF
          scp -o StrictHostKeyChecking=no ./bin/apiserver $SERVER_USER@$SERVER_IP:/opt/gojxust/gojxust
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
            docker restart gojxust
          EOF
